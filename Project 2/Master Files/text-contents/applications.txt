<h2>Web applications</h2>
      <p>Ajax has prompted the development of websites that mimic personal computer applications, such as word processing, the spreadsheet, and slide-show presentation. WYSIWYG wiki sites replicate many features of PC authoring applications. Still other sites perform collaboration and project management functions. In 2006 Google, Inc. acquired one of the best-known sites of this broad class, Writely.</p>
      <p>Several browser-based &quot;operating systems&quot; have emerged, including EyeOS and YouOS. They essentially function as application platforms, not as operating systems per se. These services mimic the user experience of desktop operating-systems, offering features and applications similar to a PC environment. They have as their distinguishing characteristic the ability to run within any modern browser.</p>
      <p>Numerous web-based application services appeared during the dot-com bubble of 1997–2001 and then vanished, having failed to gain a critical mass of customers. In 2005, WebEx acquired one of the better-known of these, Intranets.com, for USD45 million.</p>
      
      <h3>Rich Internet applications</h3>
      <p><a href="http://en.wikipedia.org/wiki/Rich_Internet_application" title="Rich Internet application">Rich-Internet application</a> techniques such as <a href="http://en.wikipedia.org/wiki/AJAX_%28programming%29" title="AJAX (programming)">AJAX</a>, <a href="http://en.wikipedia.org/wiki/Adobe_Flash" title="Adobe Flash">Adobe Flash</a>, <a href="http://en.wikipedia.org/wiki/Adobe_Flex" title="Adobe Flex">Flex</a>, <a href="http://en.wikipedia.org/wiki/Java_applet" title="Java applet">Java</a>, and <a href="http://en.wikipedia.org/wiki/Microsoft_Silverlight" title="Microsoft Silverlight">Silverlight</a> have evolved that have the potential to improve the <a href="http://en.wikipedia.org/wiki/User_experience" title="User experience">user-experience</a> in browser-based applications. These technologies allow a web-page to  request an update for some part of its content, and to alter that part  in the browser, without needing to refresh the whole page at the same  time.</p>
      <dl>
        <dt>Server-side software</dt>
      </dl>
      <p>Functionally, Web 2.0 applications build on the existing <a href="http://en.wikipedia.org/wiki/Web_server" title="Web server">Web server</a> architecture, but rely much more heavily on <a href="http://en.wikipedia.org/wiki/Back_end" title="Back end">back-end</a> software. Syndication differs only nominally from the methods of publishing using <a href="http://en.wikipedia.org/wiki/Dynamic_content_management" title="Dynamic content management">dynamic content management</a>, but web services typically require much more robust <a href="http://en.wikipedia.org/wiki/Database" title="Database">database</a> and <a href="http://en.wikipedia.org/wiki/Workflow" title="Workflow">workflow</a> support, and become very similar to the traditional <a href="http://en.wikipedia.org/wiki/Intranet" title="Intranet">intranet</a> functionality of an <a href="http://en.wikipedia.org/wiki/Application_server" title="Application server">application server</a>. Vendor approaches <a href="http://en.wikipedia.org/wiki/As_of_2007" title="As of 2007">to date</a> fall either under a universal server approach (which bundles most of  the necessary functionality in a single server platform) or under a  web-server <a href="http://en.wikipedia.org/wiki/Plugin" title="Plugin">plugin</a> approach (which uses standard publishing tools enhanced with API interfaces and other tools).</p>
      <dl>
        <dt>Client-side software</dt>
      </dl>
      <p>The extra functionality provided by Web 2.0 depends on the ability of users to work with the data stored on <a href="http://en.wikipedia.org/wiki/Web_server" title="Web server">servers</a>. This can come about through <a href="http://en.wikipedia.org/wiki/Form_%28web%29" title="Form (web)">forms</a> in an <a href="http://en.wikipedia.org/wiki/HTML" title="HTML">HTML</a> page, through a scripting-language such as <a href="http://en.wikipedia.org/wiki/Javascript" title="Javascript">Javascript</a> / <a href="http://en.wikipedia.org/wiki/Ajax_%28programming%29" title="Ajax (programming)">Ajax</a>, or through <a href="http://en.wikipedia.org/wiki/Adobe_Flash" title="Adobe Flash">Flash</a>, <a href="http://en.wikipedia.org/wiki/Microsoft_Silverlight" title="Microsoft Silverlight">Silverlight</a> or <a href="http://en.wikipedia.org/wiki/Java_applet" title="Java applet">Java Applets</a>. These methods all make use of the <a href="http://en.wikipedia.org/wiki/Client_%28computing%29" title="Client (computing)">client</a> computer to reduce server workloads and to increase the responsiveness of the application.</p>
      <h3>XML and RSS</h3>
      <p>Advocates of &quot;Web 2.0&quot; may regard syndication of site content as a  Web 2.0 feature, involving as it does standardized protocols, which  permit end-users to make use of a site's data in another context (such  as another website, a browser plugin, or a separate desktop  application). Protocols which permit syndication include <a href="http://en.wikipedia.org/wiki/RSS_%28file_format%29" title="RSS (file format)">RSS</a> (Really Simple Syndication — also known as &quot;web syndication&quot;), <a href="http://en.wikipedia.org/wiki/Resource_Description_Framework" title="Resource Description Framework">RDF</a> (as in RSS 1.1), and <a href="http://en.wikipedia.org/wiki/Atom_%28standard%29" title="Atom (standard)">Atom</a>, all of them <a href="http://en.wikipedia.org/wiki/XML" title="XML">XML</a>-based formats. Observers have started to refer to these technologies as &quot;<a href="http://en.wikipedia.org/wiki/Web_feed" title="Web feed">Web feed</a>&quot; as the usability of Web 2.0 evolves and the more user-friendly Feeds icon supplants the RSS icon.</p>
      <dl>
        <dt>Specialized protocols</dt>
      </dl>
      <p>Specialized protocols such as <a href="http://en.wikipedia.org/wiki/FOAF_%28software%29" title="FOAF (software)">FOAF</a> and <a href="http://en.wikipedia.org/wiki/XHTML_Friends_Network" title="XHTML Friends Network">XFN</a> (both for <a href="http://en.wikipedia.org/wiki/Social_networking" title="Social networking">social networking</a>) extend the functionality of sites or permit end-users to interact without centralized websites.</p>
      <h3>Web APIs</h3>
      <p>Machine-based interaction, a common feature of Web 2.0 sites, uses  two main approaches to Web APIs, which allow web-based access to data  and functions: <a href="http://en.wikipedia.org/wiki/Representational_State_Transfer" title="Representational State Transfer">REST</a> and <a href="http://en.wikipedia.org/wiki/SOAP" title="SOAP">SOAP</a>.</p>
      <ol>
        <li>REST (Representational State Transfer) Web APIs use <a href="http://en.wikipedia.org/wiki/HTTP" title="HTTP">HTTP</a> alone to interact, with XML or JSON payloads;</li>
        <li>SOAP involves <a href="http://en.wikipedia.org/wiki/HTTP#Request_Methods" title="HTTP">POSTing</a> more elaborate XML messages and requests to a server that may contain  quite complex, but pre-defined, instructions for the server to follow.</li>
      </ol>
      <p>Often servers use proprietary APIs, but standard APIs (for example,  for posting to a blog or notifying a blog update) have also come into  wide use. Most communications through APIs involve <a href="http://en.wikipedia.org/wiki/XML" title="XML">XML</a> (eXtensible Markup Language) or <a href="http://en.wikipedia.org/wiki/JSON" title="JSON">JSON</a> payloads.</p>
      <p>See also <a href="http://en.wikipedia.org/wiki/Web_Services_Description_Language" title="Web Services Description Language">Web Services Description Language</a> (WSDL) (the standard way of publishing a SOAP API) and this <a href="http://en.wikipedia.org/wiki/List_of_Web_service_specifications" title="List of Web service specifications">list of Web Service specifications</a>.</p>